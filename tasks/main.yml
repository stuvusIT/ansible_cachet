---
- name: Install required packages
  apt:
    name:
      - composer
      - git
      - php-apcu
      - php-gd
      - php-mbstring
      - php-mcrypt
      - php-mysql
      - php-simplexml
      - php-tokenizer
      - php-xml
      - python-mysqldb

- name: Create home directory
  file:
    path: "{{ cachet_home }}"
    state: directory
    owner: www-data
    group: www-data

- name: Install Cachet
  git:
    repo: https://github.com/cachethq/Cachet.git
    dest: "{{ cachet_home }}"
    version: "{{ cachet_version }}"
    depth: 1
  become: yes
  become_user: www-data
  register: git

- name: Install composer dependencies
  composer:
    working_dir: "{{ cachet_home }}"
  become: yes
  become_user: www-data

- name: Check for environment file
  stat:
    path: "{{ cachet_home }}/.env"
  register: environmentfile

- name: Generate app key
  shell: 'echo "APP_KEY=base64:$(head -c 32 /dev/urandom | base64)"'
  changed_when: false
  register: appkey_generated
  when: not environmentfile.stat.exists

- name: Fetch app key
  command: grep '^APP_KEY=' "{{ cachet_home }}/.env"
  changed_when: false
  register: appkey_fetched
  when: environmentfile.stat.exists

- name: Generate environment file
  template:
    src: env.j2
    dest: "{{ cachet_home }}/.env"
    owner: root
    group: www-data
    mode: 0660

- name: Create MySQL database
  mysql_db:
    name: "{{ cachet_mysql_name }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_host: "{{ cachet_mysql_host }}"
    login_port: "{{ cachet_mysql_port }}"
    login_user: "{{ cachet_mysql_login_user }}"
    login_password: "{{ cachet_mysql_login_password | default(omit) }}"

- name: Create MySQL user
  mysql_user:
    name: "{{ cachet_mysql_user }}"
    password: "{{ cachet_mysql_pass }}"
    priv: "{{ cachet_mysql_name }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_host: "{{ cachet_mysql_host }}"
    login_port: "{{ cachet_mysql_port }}"
    login_user: "{{ cachet_mysql_login_user }}"
    login_password: "{{ cachet_mysql_login_password | default(omit) }}"

- name: Run database migrations
  command:
    cmd: php artisan migrate --force
    chdir: "{{ cachet_home }}"
  register: out
  changed_when: "'Migrated' in out.stdout"
  become: yes
  become_user: www-data

- name: Generate cache
  command:
    cmd: php artisan config:cache
    chdir: "{{ cachet_home }}"
  changed_when: false
  become: yes
  become_user: www-data
  when: git.changed

- name: Install queue runner service
  template:
    src: queue-runner.service.j2
    dest: /etc/systemd/system/cachet-queue-runner.service
    owner: root
    group: root
    mode: 0644
  when: cachet_worker_install

- name: Start the queue runner
  systemd:
    name: cachet-queue-runner.service
    state: started
    enabled: true
  when: cachet_worker_install
